# Gateway Server Port

server.port=8080
 
# Spring Application Name (This will be the Service ID in Eureka)

spring.application.name=gateway-service
 
# Eureka Client Configuration

# This tells the gateway where to find the Eureka Server to discover other services.

eureka.client.service-url.defaultZone=http://localhost:8761/eureka
 
# Spring Cloud Gateway Routing Configuration

# Define routes for each microservice.

# Each route specifies:

#   - id: A unique identifier for the route.

#   - uri: The URI to forward the request to. 'lb://' indicates load balancing via Eureka.

#          The name after 'lb://' must match the 'spring.application.name' of the target microservice.

#   - predicates: Conditions that must be met for this route to apply (e.g., matching a path).

#   - filters: Actions to perform on the request or response (e.g., rewriting the path).
 
# Route for User Service

# Requests to /user/** will be routed to the user-service.

# Example: http://localhost:8080/user/register -> http://user-service:8081/examProtal/userModule/register

spring.cloud.gateway.routes[0].id=user_service_route

spring.cloud.gateway.routes[0].uri=lb://user-service

spring.cloud.gateway.routes[0].predicates[0]=Path=/examProtal/userModule/**

# Rewrites the path to match the internal endpoint of the user service

spring.cloud.gateway.routes[0].filters[0]=RewritePath=/user/(?<segment>.*), /examProtal/userModule/$\{segment}
 
# Route for Admin Service

# Requests to /admin/** will be routed to the admin-service.

# Example: http://localhost:8080/admin/exams -> http://admin-service:8082/api/admin/exams

spring.cloud.gateway.routes[1].id=admin_service_route

spring.cloud.gateway.routes[1].uri=lb://admin-service

spring.cloud.gateway.routes[1].predicates[0]=Path=/api/admin/**

# Rewrites the path to match the internal endpoint of the admin service

spring.cloud.gateway.routes[1].filters[0]=RewritePath=/api/admin/(?<segment>.*), /api/admin/$\{segment}
 
# Route for Question Bank Service

# Requests to /questionbank/** will be routed to the questionbank-service.

# Example: http://localhost:8080/questionbank/questions -> http://questionbank-service:8083/api/questionbank/questions

spring.cloud.gateway.routes[2].id=questionbank_service_route

spring.cloud.gateway.routes[2].uri=lb://questionbank-service

spring.cloud.gateway.routes[2].predicates[0]=Path=/api/questionbank/**

# Rewrites the path to match the internal endpoint of the question bank service

spring.cloud.gateway.routes[2].filters[0]=RewritePath=/api/questionbank/(?<segment>.*), /api/questionbank/$\{segment}
 
# Route for Exam Management Service

# Requests to /exam-management/** will be routed to the exam-management-service.

# Example: http://localhost:8080/exam-management/1/attempt -> http://exam-management-service:8084/api/exam-management/1/attempt

spring.cloud.gateway.routes[3].id=exam_management_service_route

spring.cloud.gateway.routes[3].uri=lb://response-service

spring.cloud.gateway.routes[3].predicates[0]=Path=/api/exam-management/**

# Rewrites the path to match the internal endpoint of the exam management service

spring.cloud.gateway.routes[3].filters[0]=RewritePath=/api/exam-management/(?<segment>.*), /api/exam-management/$\{segment} 